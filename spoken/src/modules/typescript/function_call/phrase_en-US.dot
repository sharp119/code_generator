digraph function_call {
    id="function_call";
    label="Calls a function";
    lang="en-US";
    langName="English";
    pad="0.2";
    rankdir=LR;
    priority="2";
    node[shape=doublecircle]; 3 4 5 7 10;
    node[shape=circle];

    0 -> 1 [label="(call, execute)"];
    1 -> 2 [label="(function)"];
    2 -> 3 [label="([multi_word_token])", store=functionName, extraArgs="{\"case\": \"camel\"}"];
    3 -> 4 [label="(Î»)"];
    2 -> 4 [label="({term})", store=functionName];
    4 -> 11 [label="(of, on, at)", disableSpellcheck="true"];
    {4 11} -> 5 [label="([expressions])", store=caller];
    {4 5} -> 6 [label="(arguments)", sem="with"];
    6 -> 7 [label="([expressions])", store=args];
    7 -> 8 [label="(and)"];
    8 -> 7 [label="([expressions])", store=args];
    {4 5} -> 9 [label="({number})", store=argsNumber, sem="with"];
    9 -> 10 [label="(arguments)"];

    title="Calls a function";
    desc="Calls a function with the specified arguments in the desired caller";

    examples="
      call function test,
      execute function normalize on [expressions] with 2 arguments,
      execute function remove on [expressions] with arguments [expressions] and [expressions],
    ";
}