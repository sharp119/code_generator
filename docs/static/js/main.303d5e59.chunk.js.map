{"version":3,"sources":["pages/@components/utils.ts","index.tsx"],"names":["langs","parseRoute","root","paths","window","location","pathname","split","filter","item","process","includes","splice","find","lang","route","App","React","lazy","WebApp","About","Home","__HOME_PAGE__","OuterRouter","props","Page","NotFound","Suspense","fallback","comp","Promise","resolve","default","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2KAMA,IAAMA,EAAQ,CAAC,CAAC,KAAM,SAAU,CAAC,KAAM,UAEhC,SAASC,IAAc,IAAD,EAQxBC,EAPEC,EAAQC,OAAOC,SAASC,SAASC,MAAM,KAAKC,QAAO,SAAAC,GAAI,MAAa,KAATA,KAG7DC,kBAAuBC,SAASR,EAAM,KACzCA,EAAMS,OAAO,EAAG,GAIbZ,EAAMa,MAAK,yCAAiBV,EAAM,QACrCA,EAAMS,OAAO,EAAG,EAAGZ,EAAM,GAAG,IAC5BE,EAAO,IAGR,IAAMY,EAAOd,EAAMa,MAAK,yCAAiBV,EAAM,OAAOH,EAAM,GACtDe,EAAQZ,EAAM,IAAM,QAE1B,MAAO,CAAEW,KAAMA,EAAK,GAAIZ,KAAI,UAAEA,SAAF,QAAUY,EAAK,GAAIC,W,+BCzBhD,yDAGMC,EAAMC,IAAMC,MAAK,kBAAM,6DACvBC,EAASF,IAAMC,MAAK,kBAAM,2EAC1BE,EAAQH,IAAMC,MAAK,kBAAM,sDACzBG,EAAOJ,IAAMC,MAAK,kBAAM,sDAS9Bd,OAAOkB,cAAgBZ,kBAEvB,IAAMa,EAAc,SAACC,GAAgB,IAAD,EACXvB,cAAhBa,EAD2B,EAC3BA,KAAMC,EADqB,EACrBA,MAEVU,EAAO,KAQX,OANqBA,EAAP,QAAVV,EAAwBC,EACT,WAAVD,EAA2BI,EACjB,UAAVJ,EAA0BK,EAChB,UAAVL,EAA0BM,EACvBH,EAAKQ,GAGhB,cAAC,IAAMC,SAAP,CAAgBC,SAAU,sCAA1B,SACC,cAACH,EAAD,CAAMX,KAAMA,OAKTI,EAAO,SAACW,GAAD,OAAyBZ,IAAMC,MAAK,kBAAMY,QAAQC,QAAQ,CAAEC,QAASH,QAE5EH,EAA+B,WACpC,OAAO,yDAA4BtB,OAAOC,SAASC,aAkBpD2B,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAACZ,EAAD,MAEDa,SAASC,eAAe,W","file":"static/js/main.303d5e59.chunk.js","sourcesContent":["export function isRoute(guess: string) {\r\n\tconst { pathname } = window.location\r\n\r\n\treturn new RegExp('^/' + guess + '(/|)$').test(pathname)\r\n}\r\n\r\nconst langs = [['en', 'en-US'], ['pt', 'pt-BR']]\r\n\r\nexport function parseRoute() {\r\n\tconst paths = window.location.pathname.split('/').filter(item => item !== '')\r\n\r\n\t// Non root folder\r\n\tif (process.env.PUBLIC_URL.includes(paths[0])) {\r\n\t\tpaths.splice(0, 1)\r\n\t}\r\n\r\n\tlet root\r\n\tif(!langs.find(([ c ]) => c === paths[0])) {\r\n\t\tpaths.splice(0, 0, langs[0][0])\r\n\t\troot = ''\r\n\t}\r\n\r\n\tconst lang = langs.find(([ c ]) => c === paths[0]) || langs[0]\r\n\tconst route = paths[1] || 'index'\r\n\r\n\treturn { lang: lang[1], root: root ?? lang[0], route }\r\n}\r\n","import React, { ComponentType } from 'react'\nimport ReactDOM from 'react-dom'\nimport { parseRoute } from './pages/@components/utils'\nconst App = React.lazy(() => import('./pages/app'))\nconst WebApp = React.lazy(() => import('./pages/webapp'))\nconst About = React.lazy(() => import('./pages/about'))\nconst Home = React.lazy(() => import('./pages/home'))\n\ndeclare global {\n\tinterface Window {\n\t\telectronShellInfo: any\n\t\t__HOME_PAGE__: string\n\t}\n}\n\nwindow.__HOME_PAGE__ = process.env.PUBLIC_URL\n\nconst OuterRouter = (props: any) => {\n\tconst { lang, route } = parseRoute()\n\n\tlet Page = null\n\n\tif (route === 'app') Page = App\n\telse if (route === 'webapp') Page = WebApp\n\telse if (route === 'about') Page = About\n\telse if (route === 'index') Page = Home\n\telse Page = lazy(NotFound)\n\n\treturn (\n\t\t<React.Suspense fallback={<h1>Wait</h1>}>\n\t\t\t<Page lang={lang}/>\n\t\t</React.Suspense>\n\t)\n}\n\nconst lazy = (comp: ComponentType) => React.lazy(() => Promise.resolve({ default: comp }))\n\nconst NotFound: ComponentType<any> = () => {\n\treturn <h3>Error 404 - Cannot get {window.location.pathname}</h3>\n}\n\n/*const UnderConstruction: ComponentType<any> = () => {\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<h2><a href=\"webapp\">Go to demo page</a></h2>\n\t\t\t<h3>ðŸš§ Under construction ðŸš§ - Later!</h3>\n\t\t\t<img\n\t\t\t\tsrc=\"https://www.themoviedb.org/t/p/w600_and_h900_bestv2/rclfHtEuiHwu5EVtBKc4tPH6cex.jpg\"\n\t\t\t\theight=\"250\"\n\t\t\t\ttitle=\"Bob the Builder was arrested during the LAVA JATO operation :(\"\n\t\t\t\talt=\"Bob the Builder was arrested during the LAVA JATO operation :(\"\n\t\t\t/>\n\t\t</React.Fragment>\n\t)\n}*/\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<OuterRouter />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n"],"sourceRoot":""}